/**
 * –ë—Ä–∞—É–∑–µ—Ä–Ω—ã–π —Ç–µ—Å—Ç Yandex Music API
 * –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ music.yandex.ru
 */

async function testYandexMusicAPI() {
    console.log('üéµ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Yandex Music API –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
    console.log('==========================================');
    
    const token = 'available';
    console.log(`–¢–æ–∫–µ–Ω: ${token}`);
    console.log('');

    const headers = {
        'Authorization': `OAuth ${token}`,
        'User-Agent': 'Yandex-Music-API/1.0',
        'Content-Type': 'application/json'
    };

    try {
        // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        console.log('üìã –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...');
        const userResponse = await fetch('https://api.music.yandex.net/account/status', {
            method: 'GET',
            headers: headers
        });

        console.log(`   –°—Ç–∞—Ç—É—Å: ${userResponse.status}`);
        
        if (!userResponse.ok) {
            const errorData = await userResponse.json().catch(() => userResponse.text());
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:`, errorData);
            return;
        }

        const userData = await userResponse.json();
        const userId = userData.result?.account?.uid;
        console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ! User ID: ${userId}`);
        console.log('   –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userData.result?.account);
        console.log('');

        if (!userId) {
            console.log('   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            return;
        }

        // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–∞–π–∫–Ω—É—Ç—ã—Ö —Ç—Ä–µ–∫–æ–≤
        console.log('‚ù§Ô∏è –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–∞–π–∫–Ω—É—Ç—ã—Ö —Ç—Ä–µ–∫–æ–≤...');
        const likesResponse = await fetch(`https://api.music.yandex.net/users/${userId}/likes/tracks`, {
            method: 'GET',
            headers: headers
        });

        console.log(`   –°—Ç–∞—Ç—É—Å: ${likesResponse.status}`);
        
        if (!likesResponse.ok) {
            const errorData = await likesResponse.json().catch(() => likesResponse.text());
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–∞–π–∫–æ–≤:`, errorData);
            return;
        }

        const likesData = await likesResponse.json();
        const trackIds = likesData.result?.library?.tracks?.map(track => track.id) || [];
        console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –ª–∞–π–∫–Ω—É—Ç—ã—Ö —Ç—Ä–µ–∫–æ–≤: ${trackIds.length}`);
        console.log('   –ü–µ—Ä–≤—ã–µ 10 ID:', trackIds.slice(0, 10));
        console.log('');

        if (trackIds.length === 0) {
            console.log('   ‚ÑπÔ∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ª–∞–π–∫–Ω—É—Ç—ã—Ö —Ç—Ä–µ–∫–æ–≤');
            return;
        }

        // –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä–≤—ã—Ö 5 —Ç—Ä–µ–∫–∞—Ö
        console.log('üéµ –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç—Ä–µ–∫–∞—Ö...');
        const testTrackIds = trackIds.slice(0, 5);
        console.log(`   –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç—Ä–µ–∫–∏: ${testTrackIds.join(', ')}`);

        const tracksResponse = await fetch('https://api.music.yandex.net/tracks', {
            method: 'POST',
            headers: headers,
            body: JSON.stringify({
                'track-ids': testTrackIds,
                'with-positions': false
            })
        });

        console.log(`   –°—Ç–∞—Ç—É—Å: ${tracksResponse.status}`);
        
        if (!tracksResponse.ok) {
            const errorData = await tracksResponse.json().catch(() => tracksResponse.text());
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–µ–∫–æ–≤:`, errorData);
            return;
        }

        const tracksData = await tracksResponse.json();
        const tracks = tracksData.result || [];
        console.log(`   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ç—Ä–µ–∫–æ–≤: ${tracks.length}`);
        console.log('');

        if (tracks.length > 0) {
            console.log('üìä –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–∫–æ–≤:');
            
            const availableCount = tracks.filter(t => t.available).length;
            const unavailableCount = tracks.filter(t => !t.available).length;
            
            console.log(`   –î–æ—Å—Ç—É–ø–Ω—ã—Ö: ${availableCount}`);
            console.log(`   –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö: ${unavailableCount}`);
            console.log('');

            console.log('üéº –ü—Ä–∏–º–µ—Ä—ã —Ç—Ä–µ–∫–æ–≤:');
            tracks.slice(0, 3).forEach((track, index) => {
                console.log(`   ${index + 1}. "${track.title}" - ${track.artists?.map(a => a.name).join(', ')}`);
                console.log(`      –ê–ª—å–±–æ–º: ${track.albums?.[0]?.title || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
                console.log(`      –î–æ—Å—Ç—É–ø–µ–Ω: ${track.available ? '‚úÖ' : '‚ùå'}`);
                console.log(`      –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${Math.floor((track.durationMs || 0) / 1000)}—Å`);
                console.log(`      –ñ–∞–Ω—Ä: ${track.albums?.[0]?.genre || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
                console.log(`      Cover URI: ${track.coverUri || '–Ω–µ—Ç'}`);
                console.log('');
            });

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–µ—Ä–≤–æ–≥–æ —Ç—Ä–µ–∫–∞
            console.log('üîç –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–≥–æ —Ç—Ä–µ–∫–∞:');
            console.log(tracks[0]);
            console.log('');
        }

        // –¢–µ—Å—Ç 4: –°–∏–º—É–ª—è—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–∫ –≤ API
        console.log('üöÄ –¢–µ—Å—Ç 4: –°–∏–º—É–ª—è—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç—Ä–µ–∫–æ–≤ (–∫–∞–∫ –≤ –Ω–∞—à–µ–º API)...');
        
        const processedTracks = tracks
            .map((track) => {
                const processed = {
                    id: String(track.id),
                    title: track.title || 'Unknown Title',
                    artist: track.artists?.map((a) => a.name).join(', ') || 'Unknown Artist',
                    album: track.albums?.[0]?.title || 'Unknown Album',
                    duration: Math.floor((track.durationMs || 0) / 1000),
                    genre: track.albums?.[0]?.genre || 'unknown',
                    cover_url: track.coverUri ? `https://${track.coverUri.replace('%%', '400x400')}` : undefined,
                    preview_url: undefined,
                    available: track.available !== false,
                };
                console.log(`   –û–±—Ä–∞–±–æ—Ç–∞–Ω —Ç—Ä–µ–∫: "${processed.title}" - ${processed.artist} (available: ${processed.available})`);
                return processed;
            })
            .filter((track) => track.title && track.artist);

        console.log('');
        console.log('üìà –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏:');
        console.log(`   –ò—Å—Ö–æ–¥–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤: ${tracks.length}`);
        console.log(`   –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${processedTracks.length}`);
        console.log(`   –î–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${processedTracks.filter(t => t.available).length}`);
        
        if (processedTracks.length > 0) {
            console.log('');
            console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ç—Ä–µ–∫–∏:');
            processedTracks.forEach((track, index) => {
                console.log(`   ${index + 1}. "${track.title}" - ${track.artist} (${track.available ? '–¥–æ—Å—Ç—É–ø–µ–Ω' : '–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'})`);
            });
        } else {
            console.log('');
            console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å —Ç—Ä–µ–∫–æ–≤!');
        }

        // –¢–µ—Å—Ç 5: –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—à Vercel API endpoint
        console.log('');
        console.log('üåê –¢–µ—Å—Ç 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ API endpoint...');
        
        try {
            const apiResponse = await fetch('/api/getYandexData', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ token: token })
            });

            console.log(`   –°—Ç–∞—Ç—É—Å API: ${apiResponse.status}`);
            
            if (apiResponse.ok) {
                const apiData = await apiResponse.json();
                console.log(`   ‚úÖ API –≤–µ—Ä–Ω—É–ª ${apiData.tracks?.length || 0} —Ç—Ä–µ–∫–æ–≤`);
                console.log('   –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:', apiData.metadata);
                
                if (apiData.tracks && apiData.tracks.length > 0) {
                    console.log('   –ü—Ä–∏–º–µ—Ä —Ç—Ä–µ–∫–∞ –∏–∑ API:', apiData.tracks[0]);
                }
            } else {
                const errorData = await apiResponse.json().catch(() => apiResponse.text());
                console.log(`   ‚ùå –û—à–∏–±–∫–∞ API:`, errorData);
            }
        } catch (apiError) {
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ API: ${apiError.message}`);
        }

    } catch (error) {
        console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        console.error(error);
    }
}

// –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
console.log(`
üîß –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ó–ê–ü–£–°–ö–£ –¢–ï–°–¢–ê:

1. –û—Ç–∫—Ä–æ–π—Ç–µ https://music.yandex.ru –≤ –±—Ä–∞—É–∑–µ—Ä–µ
2. –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –Ø–Ω–¥–µ–∫—Å.–ú—É–∑—ã–∫–∏
3. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (F12)
4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
5. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: testYandexMusicAPI()

–ö–æ–¥ –≥–æ—Ç–æ–≤ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é!
`);

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if (typeof window !== 'undefined') {
    window.testYandexMusicAPI = testYandexMusicAPI;
}