#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
"""

import sys
import os

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç—ã"""
    print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    try:
        import yandex_music
        print("‚úÖ yandex-music –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ yandex-music: {e}")
        return False
    
    try:
        import requests
        print("‚úÖ requests –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ requests: {e}")
        return False
    
    try:
        import json
        print("‚úÖ json –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ json: {e}")
        return False
    
    return True

def test_functions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"""
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π...")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
    sys.path.append(os.path.dirname(__file__))
    
    try:
        from collect_yandex_music_data import (
            sanitize_filename,
            format_token_for_display,
            create_output_structure
        )
        
        # –¢–µ—Å—Ç sanitize_filename
        test_filename = "Test<>Song|Name?.mp3"
        clean_filename = sanitize_filename(test_filename)
        print(f"‚úÖ sanitize_filename: '{test_filename}' -> '{clean_filename}'")
        
        # –¢–µ—Å—Ç format_token_for_display
        test_token = "very_long_token_string_for_testing"
        formatted_token = format_token_for_display(test_token)
        print(f"‚úÖ format_token_for_display: '{test_token}' -> '{formatted_token}'")
        
        # –¢–µ—Å—Ç create_output_structure
        test_dir = "test_output"
        metadata_file, audio_dir = create_output_structure(test_dir)
        print(f"‚úÖ create_output_structure —Å–æ–∑–¥–∞–ª: {metadata_file}, {audio_dir}")
        
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–∞–ø–∫—É
        import shutil
        if os.path.exists(test_dir):
            shutil.rmtree(test_dir)
            print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –ø–∞–ø–∫–∞ –æ—á–∏—â–µ–Ω–∞")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    print("üß™ –¢–µ—Å—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Yandex Music Collector")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã
    if not test_imports():
        print("\n‚ùå –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ –ø—Ä–æ–≤–∞–ª–µ–Ω")
        sys.exit(1)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
    if not test_functions():
        print("\n‚ùå –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–æ–≤–∞–ª–µ–Ω")
        sys.exit(1)
    
    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("üí° –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")

if __name__ == "__main__":
    main()