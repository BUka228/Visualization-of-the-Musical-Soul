import { CrystalTrack } from '../types';

/**
 * –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π HUD –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç—Ä–µ–∫–∞—Ö
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞ —Å —Ç–æ–Ω–∫–∏–º –≥—Ä–æ—Ç–µ—Å–∫–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º
 */
export class MinimalistHUD {
  private container: HTMLElement;
  private hudElement?: HTMLElement;
  private trackNameElement?: HTMLElement;
  private artistNameElement?: HTMLElement;
  private genreElement?: HTMLElement;
  private additionalInfoElement?: HTMLElement;
  private initialized: boolean = false;
  private currentTrack?: CrystalTrack;
  private isVisible: boolean = false;

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–∏–ª–µ–π
  private static readonly HUD_STYLES = {
    position: 'fixed',
    bottom: '30px',
    left: '50%',
    transform: 'translateX(-50%)',
    zIndex: '1000',
    pointerEvents: 'none',
    userSelect: 'none',
    textAlign: 'center',
    fontFamily: '"Helvetica Neue", "Arial", sans-serif', // –¢–æ–Ω–∫–∏–π –≥—Ä–æ—Ç–µ—Å–∫
    fontWeight: '200', // –û—á–µ–Ω—å —Ç–æ–Ω–∫–∏–π
    color: '#ffffff',
    textShadow: '0 0 10px rgba(255, 255, 255, 0.3)',
    opacity: '0',
    transition: 'opacity 0.4s ease, transform 0.4s ease',
    maxWidth: '600px',
    padding: '0 20px'
  };

  private static readonly TRACK_NAME_STYLES = {
    fontSize: '24px',
    fontWeight: '300',
    letterSpacing: '1px',
    marginBottom: '8px',
    color: '#ffffff',
    textShadow: '0 0 15px rgba(255, 255, 255, 0.4)'
  };

  private static readonly ARTIST_NAME_STYLES = {
    fontSize: '16px',
    fontWeight: '200',
    letterSpacing: '0.5px',
    marginBottom: '12px',
    color: '#cccccc',
    textShadow: '0 0 10px rgba(255, 255, 255, 0.2)'
  };

  private static readonly GENRE_STYLES = {
    fontSize: '12px',
    fontWeight: '200',
    letterSpacing: '2px',
    textTransform: 'uppercase',
    marginBottom: '6px',
    opacity: '0.8'
  };

  private static readonly ADDITIONAL_INFO_STYLES = {
    fontSize: '11px',
    fontWeight: '200',
    letterSpacing: '1px',
    opacity: '0.6',
    color: '#aaaaaa'
  };

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
  private static readonly ANIMATION_CONFIG = {
    showDuration: 400,    // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ—è–≤–ª–µ–Ω–∏—è
    hideDuration: 300,    // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
    showDelay: 100,       // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ—è–≤–ª–µ–Ω–∏–µ–º
    hideDelay: 0          // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ–º
  };

  constructor(container: HTMLElement) {
    this.container = container;
    console.log('üé® Minimalist HUD created');
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HUD —Å–∏—Å—Ç–µ–º—ã
   */
  initialize(): void {
    console.log('üé® Initializing Minimalist HUD...');
    
    this.createHUDElements();
    this.setupResponsiveDesign();
    this.initialized = true;
    
    console.log('‚úÖ Minimalist HUD initialized');
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã HUD
   */
  private createHUDElements(): void {
    // –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä HUD
    this.hudElement = document.createElement('div');
    this.hudElement.id = 'soul-galaxy-hud';
    this.applyStyles(this.hudElement, MinimalistHUD.HUD_STYLES);

    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ç—Ä–µ–∫–∞
    this.trackNameElement = document.createElement('div');
    this.trackNameElement.className = 'hud-track-name';
    this.applyStyles(this.trackNameElement, MinimalistHUD.TRACK_NAME_STYLES);

    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –∏–º–µ–Ω–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    this.artistNameElement = document.createElement('div');
    this.artistNameElement.className = 'hud-artist-name';
    this.applyStyles(this.artistNameElement, MinimalistHUD.ARTIST_NAME_STYLES);

    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –∂–∞–Ω—Ä–∞
    this.genreElement = document.createElement('div');
    this.genreElement.className = 'hud-genre';
    this.applyStyles(this.genreElement, MinimalistHUD.GENRE_STYLES);

    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    this.additionalInfoElement = document.createElement('div');
    this.additionalInfoElement.className = 'hud-additional-info';
    this.applyStyles(this.additionalInfoElement, MinimalistHUD.ADDITIONAL_INFO_STYLES);

    // –°–æ–±–∏—Ä–∞–µ–º HUD
    this.hudElement.appendChild(this.trackNameElement);
    this.hudElement.appendChild(this.artistNameElement);
    this.hudElement.appendChild(this.genreElement);
    this.hudElement.appendChild(this.additionalInfoElement);

    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    this.container.appendChild(this.hudElement);

    console.log('üé® HUD elements created and added to DOM');
  }

  /**
   * –ü—Ä–∏–º–µ–Ω—è–µ—Ç —Å—Ç–∏–ª–∏ –∫ —ç–ª–µ–º–µ–Ω—Ç—É
   */
  private applyStyles(element: HTMLElement, styles: { [key: string]: string }): void {
    Object.entries(styles).forEach(([property, value]) => {
      (element.style as any)[property] = value;
    });
  }

  /**
   * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ —ç–∫—Ä–∞–Ω–∞
   */
  private setupResponsiveDesign(): void {
    const updateResponsiveStyles = () => {
      if (!this.hudElement) return;

      const screenWidth = window.innerWidth;
      const screenHeight = window.innerHeight;

      // –ê–¥–∞–ø—Ç–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
      if (screenWidth <= 768) {
        this.hudElement.style.bottom = '20px';
        this.hudElement.style.padding = '0 15px';
        this.hudElement.style.maxWidth = '90%';
        
        if (this.trackNameElement) {
          this.trackNameElement.style.fontSize = '20px';
        }
        if (this.artistNameElement) {
          this.artistNameElement.style.fontSize = '14px';
        }
        if (this.genreElement) {
          this.genreElement.style.fontSize = '10px';
        }
        if (this.additionalInfoElement) {
          this.additionalInfoElement.style.fontSize = '9px';
        }
      }
      // –ê–¥–∞–ø—Ç–∞—Ü–∏—è –¥–ª—è –ø–ª–∞–Ω—à–µ—Ç–æ–≤
      else if (screenWidth <= 1024) {
        this.hudElement.style.bottom = '25px';
        this.hudElement.style.padding = '0 18px';
        this.hudElement.style.maxWidth = '80%';
        
        if (this.trackNameElement) {
          this.trackNameElement.style.fontSize = '22px';
        }
        if (this.artistNameElement) {
          this.artistNameElement.style.fontSize = '15px';
        }
      }
      // –ê–¥–∞–ø—Ç–∞—Ü–∏—è –¥–ª—è –±–æ–ª—å—à–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤
      else if (screenWidth >= 1920) {
        this.hudElement.style.bottom = '40px';
        this.hudElement.style.maxWidth = '700px';
        
        if (this.trackNameElement) {
          this.trackNameElement.style.fontSize = '28px';
        }
        if (this.artistNameElement) {
          this.artistNameElement.style.fontSize = '18px';
        }
        if (this.genreElement) {
          this.genreElement.style.fontSize = '14px';
        }
        if (this.additionalInfoElement) {
          this.additionalInfoElement.style.fontSize = '12px';
        }
      }

      // –ê–¥–∞–ø—Ç–∞—Ü–∏—è –¥–ª—è –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤
      if (screenHeight >= 1200) {
        this.hudElement.style.bottom = '50px';
      }
    };

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    updateResponsiveStyles();

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener('resize', updateResponsiveStyles);

    console.log('üì± Responsive design configured');
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–µ–∫–µ
   */
  showTrackInfo(track: CrystalTrack): void {
    if (!this.initialized || !this.hudElement) {
      console.warn('‚ö†Ô∏è Minimalist HUD not initialized');
      return;
    }

    console.log(`üé® Showing track info: ${track.name} by ${track.artist}`);

    this.currentTrack = track;
    this.updateTrackInfo(track);

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
    setTimeout(() => {
      this.showHUD();
    }, MinimalistHUD.ANIMATION_CONFIG.showDelay);
  }

  /**
   * –°–∫—Ä—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–µ–∫–µ
   */
  hideTrackInfo(): void {
    if (!this.initialized || !this.hudElement) {
      return;
    }

    console.log('üé® Hiding track info');

    // –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
    setTimeout(() => {
      this.hideHUD();
    }, MinimalistHUD.ANIMATION_CONFIG.hideDelay);

    this.currentTrack = undefined;
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ HUD —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç—Ä–µ–∫–µ
   */
  private updateTrackInfo(track: CrystalTrack): void {
    if (!this.trackNameElement || !this.artistNameElement || 
        !this.genreElement || !this.additionalInfoElement) {
      return;
    }

    // –ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞
    this.trackNameElement.textContent = track.name;

    // –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å
    this.artistNameElement.textContent = track.artist;

    // –ñ–∞–Ω—Ä —Å —Ü–≤–µ—Ç–æ–º
    this.genreElement.textContent = track.genre;
    this.genreElement.style.color = track.genreColor.getHexString();
    this.genreElement.style.textShadow = `0 0 15px ${track.genreColor.getHexString()}40`;

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    const additionalInfo = this.formatAdditionalInfo(track);
    this.additionalInfoElement.textContent = additionalInfo;
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–µ–∫–µ
   */
  private formatAdditionalInfo(track: CrystalTrack): string {
    const info: string[] = [];

    // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –∫—Ä–∏—Å—Ç–∞–ª–ª–∞ (–∫–∞–∫ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —ç–Ω–µ—Ä–≥–∏–∏)
    if (track.size !== undefined) {
      info.push(`Size ${Math.round(track.size * 100)}%`);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å
    if (track.popularity !== undefined && track.popularity > 0) {
      info.push(`Popularity ${track.popularity}%`);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    if (track.duration) {
      const minutes = Math.floor(track.duration / 60000);
      const seconds = Math.floor((track.duration % 60000) / 1000);
      info.push(`${minutes}:${seconds.toString().padStart(2, '0')}`);
    }

    return info.join(' ‚Ä¢ ');
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç HUD —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
   */
  private showHUD(): void {
    if (!this.hudElement || this.isVisible) return;

    this.isVisible = true;
    this.hudElement.style.opacity = '1';
    this.hudElement.style.transform = 'translateX(-50%) translateY(0)';

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è CSS –∞–Ω–∏–º–∞—Ü–∏–π
    this.hudElement.classList.add('hud-visible');
  }

  /**
   * –°–∫—Ä—ã–≤–∞–µ—Ç HUD —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
   */
  private hideHUD(): void {
    if (!this.hudElement || !this.isVisible) return;

    this.isVisible = false;
    this.hudElement.style.opacity = '0';
    this.hudElement.style.transform = 'translateX(-50%) translateY(10px)';

    // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å –¥–ª—è CSS –∞–Ω–∏–º–∞—Ü–∏–π
    this.hudElement.classList.remove('hud-visible');
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç HUD (–º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π)
   */
  update(deltaTime: number): void {
    if (!this.initialized || !this.isVisible || !this.currentTrack) {
      return;
    }

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏–ª–∏ —ç—Ñ—Ñ–µ–∫—Ç—ã
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –ø—É–ª—å—Å–∞—Ü–∏—é —Ç–µ–∫—Å—Ç–∞ –≤ —Ä–∏—Ç–º –º—É–∑—ã–∫–∏
    this.updatePulseEffect(deltaTime);
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç –ø—É–ª—å—Å–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞
   */
  private updatePulseEffect(deltaTime: number): void {
    if (!this.currentTrack || !this.trackNameElement) return;

    // –°–æ–∑–¥–∞–µ–º —Ç–æ–Ω–∫–∏–π —ç—Ñ—Ñ–µ–∫—Ç –ø—É–ª—å—Å–∞—Ü–∏–∏ –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ç—Ä–µ–∫–∞
    const pulseSpeed = this.currentTrack.pulseSpeed || 1.0;
    const time = performance.now() * 0.001;
    const pulse = Math.sin(time * pulseSpeed) * 0.1 + 1.0;
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –æ—á–µ–Ω—å —Ç–æ–Ω–∫—É—é –ø—É–ª—å—Å–∞—Ü–∏—é –∫ —Ç–µ–Ω–∏ —Ç–µ–∫—Å—Ç–∞
    const shadowIntensity = 0.3 + pulse * 0.1;
    this.trackNameElement.style.textShadow = 
      `0 0 15px rgba(255, 255, 255, ${shadowIntensity})`;
  }

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è HUD
   */
  setCustomStyles(styles: {
    fontFamily?: string;
    fontSize?: string;
    color?: string;
    position?: { bottom?: string; left?: string; };
  }): void {
    if (!this.hudElement) return;

    if (styles.fontFamily) {
      this.hudElement.style.fontFamily = styles.fontFamily;
    }

    if (styles.color) {
      this.hudElement.style.color = styles.color;
    }

    if (styles.position) {
      if (styles.position.bottom) {
        this.hudElement.style.bottom = styles.position.bottom;
      }
      if (styles.position.left) {
        this.hudElement.style.left = styles.position.left;
      }
    }

    if (styles.fontSize && this.trackNameElement) {
      this.trackNameElement.style.fontSize = styles.fontSize;
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π —Ç—Ä–µ–∫
   */
  getCurrentTrack(): CrystalTrack | undefined {
    return this.currentTrack;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤–∏–¥–µ–Ω –ª–∏ HUD
   */
  isHUDVisible(): boolean {
    return this.isVisible;
  }

  /**
   * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∫—Ä—ã–≤–∞–µ—Ç HUD (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ)
   */
  forceHide(): void {
    this.hideTrackInfo();
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É HUD
   */
  getHUDStats(): {
    initialized: boolean;
    visible: boolean;
    currentTrack: string | null;
    elementCount: number;
  } {
    return {
      initialized: this.initialized,
      visible: this.isVisible,
      currentTrack: this.currentTrack ? `${this.currentTrack.name} by ${this.currentTrack.artist}` : null,
      elementCount: this.hudElement ? this.hudElement.children.length : 0
    };
  }

  /**
   * –û—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç —Ä–µ—Å—É—Ä—Å—ã HUD
   */
  dispose(): void {
    console.log('üóëÔ∏è Disposing Minimalist HUD...');

    // –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.removeEventListener('resize', this.setupResponsiveDesign);

    // –£–¥–∞–ª—è–µ–º HUD –∏–∑ DOM
    if (this.hudElement && this.container.contains(this.hudElement)) {
      this.container.removeChild(this.hudElement);
    }

    // –û—á–∏—â–∞–µ–º —Å—Å—ã–ª–∫–∏
    this.hudElement = undefined;
    this.trackNameElement = undefined;
    this.artistNameElement = undefined;
    this.genreElement = undefined;
    this.additionalInfoElement = undefined;
    this.currentTrack = undefined;

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    this.initialized = false;
    this.isVisible = false;

    console.log('‚úÖ Minimalist HUD disposed');
  }
}