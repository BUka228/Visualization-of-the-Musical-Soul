import * as THREE from 'three';
import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';
import { SimpleZoomSystem } from './SimpleZoomSystem';
import { CrystalTrack } from '../types';

/**
 * –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –∫–∞–º–µ—Ä—ã —Å –ø—Ä–æ—Å—Ç–æ–π —Å–∏—Å—Ç–µ–º–æ–π –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏—è
 * –ó–∞–º–µ–Ω—è–µ—Ç —Å–ª–æ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Ñ–æ–∫—É—Å–∞ –Ω–∞ –ø—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ –∫ –∫—Ä–∏—Å—Ç–∞–ª–ª–∞–º
 */
export class SimpleCameraController {
    private camera: THREE.PerspectiveCamera;
    private renderer: THREE.WebGLRenderer;
    private scene: THREE.Scene;
    private orbitControls: OrbitControls;
    private zoomSystem: SimpleZoomSystem;
    
    // UI Manager –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    private uiManager?: any;
    
    // –°–∏—Å—Ç–µ–º–∞ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Ä–∞—â–µ–Ω–∏–µ–º –∫–ª–∞—Å—Ç–µ—Ä–∞
    private crystalTrackSystem?: any;
    
    constructor(camera: THREE.PerspectiveCamera, renderer: THREE.WebGLRenderer, scene: THREE.Scene) {
        this.camera = camera;
        this.renderer = renderer;
        this.scene = scene;
        
        // –°–æ–∑–¥–∞–µ–º OrbitControls
        this.orbitControls = new OrbitControls(camera, renderer.domElement);
        this.setupOrbitControls();
        
        // –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—É –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏—è
        this.zoomSystem = new SimpleZoomSystem(camera, scene);
        this.setupZoomCallbacks();
        
        console.log('üìπ Simple Camera Controller initialized');
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OrbitControls
     */
    private setupOrbitControls(): void {
        this.orbitControls.enableDamping = true;
        this.orbitControls.dampingFactor = 0.05;
        this.orbitControls.screenSpacePanning = false;
        
        // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
        this.orbitControls.minDistance = 10;
        this.orbitControls.maxDistance = 500;
        this.orbitControls.maxPolarAngle = Math.PI;
        this.orbitControls.minPolarAngle = 0;
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∫–æ—Ä–æ—Å—Ç–µ–π
        this.orbitControls.rotateSpeed = 0.5;
        this.orbitControls.zoomSpeed = 1.0;
        this.orbitControls.panSpeed = 0.8;
        
        console.log('üéÆ OrbitControls configured');
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–ª–±—ç–∫–æ–≤ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏—è
     */
    private setupZoomCallbacks(): void {
        this.zoomSystem.setCallbacks({
            onZoomStart: (crystal: CrystalTrack) => {
                console.log(`üîç Zoom started to: ${crystal.name}`);
                // –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–∞—â–µ–Ω–∏–µ –∑–¥–µ—Å—å - —ç—Ç–æ —É–∂–µ –¥–µ–ª–∞–µ—Ç—Å—è –≤ handleCrystalClick
                // –ò–∑–±–µ–≥–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–∏–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Ä–∞—â–µ–Ω–∏–µ–º
            },
            
            onZoomComplete: (crystal: CrystalTrack) => {
                console.log(`‚úÖ Zoom completed to: ${crystal.name}`);
                // –ù–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–∞—â–µ–Ω–∏–µ –∑–¥–µ—Å—å - —ç—Ç–æ —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∞—É–¥–∏–æ –∫–æ–ª–ª–±—ç–∫–∞–º–∏ –∏ –∫–ª–∏–∫–∞–º–∏ –º—ã—à–∏
            }
        });
    }
    

    
    /**
     * –ü—Ä–∏–±–ª–∏–∂–∞–µ—Ç—Å—è –∫ –∫—Ä–∏—Å—Ç–∞–ª–ª—É
     */
    public async zoomToCrystal(crystal: CrystalTrack): Promise<void> {
        return this.zoomSystem.zoomToCrystal(crystal);
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–∏ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ
     */
    public isZooming(): boolean {
        return this.zoomSystem.getIsZooming();
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ü–µ–ª–µ–≤–æ–π –∫—Ä–∏—Å—Ç–∞–ª–ª
     */
    public getTargetCrystal(): CrystalTrack | undefined {
        return this.zoomSystem.getTargetCrystal();
    }
    
    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç UI Manager –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
     */
    public setUIManager(uiManager: any): void {
        this.uiManager = uiManager;
        console.log('üé® UI Manager integrated with Simple Camera Controller');
    }
    
    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Ä–∞—â–µ–Ω–∏–µ–º –∫–ª–∞—Å—Ç–µ—Ä–∞
     */
    public setCrystalTrackSystem(crystalTrackSystem: any): void {
        this.crystalTrackSystem = crystalTrackSystem;
        console.log('üíé Crystal Track System integrated with Simple Camera Controller');
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏—è
     */
    public setZoomSettings(settings: {
        zoomDistance?: number;
        animationDuration?: number;
    }): void {
        this.zoomSystem.setSettings(settings);
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ OrbitControls –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
     */
    public getOrbitControls(): OrbitControls {
        return this.orbitControls;
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ —Ü–∏–∫–ª–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞)
     */
    public update(deltaTime: number = 0.016): void {
        // –û–±–Ω–æ–≤–ª—è–µ–º OrbitControls –≤—Å–µ–≥–¥–∞ (–ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ)
        this.orbitControls.update();
    }
    
    /**
     * –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
     */
    public dispose(): void {
        console.log('üóëÔ∏è Disposing Simple Camera Controller...');
        
        // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—ã
        this.zoomSystem.dispose();
        this.orbitControls.dispose();
        
        console.log('‚úÖ Simple Camera Controller disposed');
    }
}