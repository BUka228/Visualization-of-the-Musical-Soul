/**
 * PerformanceOptimizer - –≥–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
 * –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: instanced rendering, frustum culling, resource management –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
 */

import * as THREE from 'three';
import { ProcessedTrack, TrackObject } from '../types';
import { FrustumCullingManager } from './FrustumCullingManager';
import { InstancedRenderingManager } from './InstancedRenderingManager';
import { ResourceManager } from './ResourceManager';
import { PerformanceMonitor, PerformanceWarning } from './PerformanceMonitor';

export interface PerformanceConfig {
  enableInstancedRendering: boolean;
  enableFrustumCulling: boolean;
  enableResourceOptimization: boolean;
  enablePerformanceMonitoring: boolean;
  autoOptimization: boolean;
  targetFps: number;
}

export interface OptimizationStats {
  totalObjects: number;
  instancedObjects: number;
  culledObjects: number;
  reusedResources: number;
  currentFps: number;
  memoryUsage: number;
  drawCallsReduced: number;
}

export class PerformanceOptimizer {
  private scene: THREE.Scene;
  private camera: THREE.Camera;
  private renderer: THREE.WebGLRenderer;
  
  // –ú–µ–Ω–µ–¥–∂–µ—Ä—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
  private frustumCullingManager: FrustumCullingManager;
  private instancedRenderingManager: InstancedRenderingManager;
  private resourceManager: ResourceManager;
  private performanceMonitor: PerformanceMonitor;
  
  // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  private config: PerformanceConfig = {
    enableInstancedRendering: true,
    enableFrustumCulling: true,
    enableResourceOptimization: true,
    enablePerformanceMonitoring: true,
    autoOptimization: true,
    targetFps: 60
  };
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  private stats: OptimizationStats = {
    totalObjects: 0,
    instancedObjects: 0,
    culledObjects: 0,
    reusedResources: 0,
    currentFps: 0,
    memoryUsage: 0,
    drawCallsReduced: 0
  };
  
  // –ö–æ–ª–ª–±—ç–∫–∏
  private onWarningCallback?: (warning: PerformanceWarning) => void;
  private onStatsUpdateCallback?: (stats: OptimizationStats) => void;
  
  // –ê–≤—Ç–æ–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
  private autoOptimizationEnabled: boolean = true;
  private lastOptimizationTime: number = 0;
  private optimizationInterval: number = 5000; // 5 —Å–µ–∫—É–Ω–¥

  constructor(scene: THREE.Scene, camera: THREE.Camera, renderer: THREE.WebGLRenderer) {
    this.scene = scene;
    this.camera = camera;
    this.renderer = renderer;
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    this.frustumCullingManager = new FrustumCullingManager(camera);
    this.instancedRenderingManager = new InstancedRenderingManager(scene);
    this.resourceManager = new ResourceManager();
    this.performanceMonitor = new PerformanceMonitor(renderer);
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–ª–±—ç–∫–æ–≤
    this.setupCallbacks();
    
    console.log('üöÄ PerformanceOptimizer –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }

  /**
   * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–æ–ª–ª–±—ç–∫–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
   */
  private setupCallbacks(): void {
    // –ö–æ–ª–ª–±—ç–∫ –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    this.performanceMonitor.setOnWarning((warning) => {
      this.handlePerformanceWarning(warning);
      
      if (this.onWarningCallback) {
        this.onWarningCallback(warning);
      }
    });
    
    // –ö–æ–ª–ª–±—ç–∫ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    this.performanceMonitor.setOnStatsUpdate((performanceStats) => {
      this.updateOptimizationStats(performanceStats);
      
      if (this.onStatsUpdateCallback) {
        this.onStatsUpdateCallback(this.stats);
      }
    });
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –¥–ª—è –º–∞—Å—Å–∏–≤–∞ —Ç—Ä–µ–∫–æ–≤
   */
  public initializeOptimization(tracks: ProcessedTrack[]): void {
    console.log(`üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è ${tracks.length} —Ç—Ä–µ–∫–æ–≤...`);
    
    // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
    if (this.config.enableResourceOptimization) {
      this.preloadResources(tracks);
    }
    
    // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    if (this.config.enableInstancedRendering) {
      this.createInstancedObjects(tracks);
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ frustum culling
    if (this.config.enableFrustumCulling) {
      this.setupFrustumCulling(tracks);
    }
    
    this.stats.totalObjects = tracks.length;
    console.log('‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }

  /**
   * –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
   */
  private preloadResources(tracks: ProcessedTrack[]): void {
    const genres = [...new Set(tracks.map(track => track.genre))];
    const colors = [...new Set(tracks.map(track => track.color))];
    const sizes = [...new Set(tracks.map(track => Math.round(track.size * 4) / 4))];
    
    this.resourceManager.preloadGeometries(genres, sizes);
    this.resourceManager.preloadMaterials(genres, colors);
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∏–Ω—Å—Ç–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
   */
  private createInstancedObjects(tracks: ProcessedTrack[]): void {
    this.instancedRenderingManager.createInstancedObjects(
      tracks,
      (genre, size) => this.resourceManager.getGeometry(genre, size),
      (genre, color, popularity) => this.resourceManager.getMaterial(genre, color, popularity)
    );
    
    const instanceStats = this.instancedRenderingManager.getStats();
    this.stats.instancedObjects = instanceStats.instancedObjects;
    this.stats.drawCallsReduced = instanceStats.drawCallsReduced;
  }

  /**
   * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç frustum culling –¥–ª—è —Ç—Ä–µ–∫–æ–≤
   */
  private setupFrustumCulling(tracks: ProcessedTrack[]): void {
    tracks.forEach((track, index) => {
      // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ culling
      const tempObject = new THREE.Object3D();
      tempObject.position.copy(track.position);
      
      // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –∏ —Ä–∞–∑–º–µ—Ä–∞
      const priority = Math.round(track.popularity + track.size * 10);
      
      this.frustumCullingManager.addObject(track.id, tempObject, priority);
    });
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä
   */
  public update(deltaTime: number): void {
    const currentTime = performance.now();
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    if (this.config.enablePerformanceMonitoring) {
      this.performanceMonitor.update();
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ frustum culling
    if (this.config.enableFrustumCulling) {
      this.frustumCullingManager.update(currentTime);
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–π –∏–Ω—Å—Ç–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    if (this.config.enableInstancedRendering) {
      this.instancedRenderingManager.updateAnimation(deltaTime, currentTime);
    }
    
    // –ê–≤—Ç–æ–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
    if (this.config.autoOptimization && currentTime - this.lastOptimizationTime > this.optimizationInterval) {
      this.performAutoOptimization();
      this.lastOptimizationTime = currentTime;
    }
  }

  /**
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
   */
  private performAutoOptimization(): void {
    const performanceStats = this.performanceMonitor.getStats();
    
    // –ï—Å–ª–∏ FPS —Å–ª–∏—à–∫–æ–º –Ω–∏–∑–∫–∏–π, –ø—Ä–∏–º–µ–Ω—è–µ–º –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—É—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é
    if (performanceStats.fps < this.config.targetFps * 0.8) {
      console.log('‚ö° –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏–∑-–∑–∞ –Ω–∏–∑–∫–æ–≥–æ FPS');
      
      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –¥–∏—Å—Ç–∞–Ω—Ü–∏—é culling
      this.frustumCullingManager.updateConfig({
        maxDistance: 300,
        maxChecksPerFrame: 50
      });
      
      // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Ä–µ—Å—É—Ä—Å—ã
      this.resourceManager.optimizeResources();
    }
    
    // –ï—Å–ª–∏ FPS —Å—Ç–∞–±–∏–ª—å–Ω—ã–π, –º–æ–∂–µ–º –æ—Å–ª–∞–±–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
    else if (performanceStats.fps > this.config.targetFps * 1.1) {
      this.frustumCullingManager.updateConfig({
        maxDistance: 500,
        maxChecksPerFrame: 100
      });
    }
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
   */
  private handlePerformanceWarning(warning: PerformanceWarning): void {
    if (!this.config.autoOptimization) return;
    
    switch (warning.type) {
      case 'low_fps':
        this.handleLowFpsWarning(warning);
        break;
      case 'high_memory':
        this.handleHighMemoryWarning(warning);
        break;
      case 'high_draw_calls':
        this.handleHighDrawCallsWarning(warning);
        break;
      case 'high_triangles':
        this.handleHighTrianglesWarning(warning);
        break;
    }
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–∏–∑–∫–æ–º FPS
   */
  private handleLowFpsWarning(warning: PerformanceWarning): void {
    console.log('üîß –ê–≤—Ç–æ–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: —Å–Ω–∏–∂–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –∏–∑-–∑–∞ –Ω–∏–∑–∫–æ–≥–æ FPS');
    
    // –ë–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –æ—Ç—Å–µ—á–µ–Ω–∏–µ
    this.frustumCullingManager.updateConfig({
      maxDistance: 200,
      maxChecksPerFrame: 30
    });
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    this.frustumCullingManager.forceUpdateAll();
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –≤—ã—Å–æ–∫–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ø–∞–º—è—Ç–∏
   */
  private handleHighMemoryWarning(warning: PerformanceWarning): void {
    console.log('üîß –ê–≤—Ç–æ–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: –æ—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –∏–∑-–∑–∞ –≤—ã—Å–æ–∫–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏');
    
    // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Ä–µ—Å—É—Ä—Å—ã
    this.resourceManager.optimizeResources();
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –≤—ã—Å–æ–∫–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ draw calls
   */
  private handleHighDrawCallsWarning(warning: PerformanceWarning): void {
    console.log('üîß –ê–≤—Ç–æ–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∏–Ω—Å—Ç–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑-–∑–∞ –≤—ã—Å–æ–∫–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ draw calls');
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –∏–Ω—Å—Ç–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –≤—ã—Å–æ–∫–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤
   */
  private handleHighTrianglesWarning(warning: PerformanceWarning): void {
    console.log('üîß –ê–≤—Ç–æ–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: —É–ø—Ä–æ—â–µ–Ω–∏–µ –≥–µ–æ–º–µ—Ç—Ä–∏–∏ –∏–∑-–∑–∞ –≤—ã—Å–æ–∫–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤');
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è LOD (Level of Detail)
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
   */
  private updateOptimizationStats(performanceStats: any): void {
    const cullingStats = this.frustumCullingManager.getStats();
    const instanceStats = this.instancedRenderingManager.getStats();
    const resourceStats = this.resourceManager.getStats();
    
    this.stats = {
      totalObjects: this.stats.totalObjects,
      instancedObjects: instanceStats.instancedObjects,
      culledObjects: cullingStats.culledObjects,
      reusedResources: resourceStats.reusedGeometries + resourceStats.reusedMaterials,
      currentFps: performanceStats.fps,
      memoryUsage: performanceStats.memoryUsage,
      drawCallsReduced: instanceStats.drawCallsReduced
    };
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Ç—Ä–µ–∫–∞
   */
  public updateTrackHighlight(trackId: string, highlighted: boolean): void {
    if (this.config.enableInstancedRendering) {
      this.instancedRenderingManager.updateInstanceHighlight(trackId, highlighted);
    }
  }

  /**
   * –ù–∞—Ö–æ–¥–∏—Ç —Ç—Ä–µ–∫ –ø–æ –ø–æ–∑–∏—Ü–∏–∏
   */
  public getTrackAtPosition(worldPosition: THREE.Vector3, tolerance: number = 2): ProcessedTrack | null {
    if (this.config.enableInstancedRendering) {
      return this.instancedRenderingManager.getTrackAtPosition(worldPosition, tolerance);
    }
    return null;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ç—Ä–µ–∫–∏ –≤ —Ä–∞–¥–∏—É—Å–µ
   */
  public getTracksInRadius(worldPosition: THREE.Vector3, radius: number): ProcessedTrack[] {
    if (this.config.enableInstancedRendering) {
      return this.instancedRenderingManager.getTracksInRadius(worldPosition, radius);
    }
    return [];
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
   */
  public updateConfig(newConfig: Partial<PerformanceConfig>): void {
    Object.assign(this.config, newConfig);
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º
    if (!this.config.enableFrustumCulling) {
      this.frustumCullingManager.setAllVisible(true);
    }
    
    console.log('üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', newConfig);
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
   */
  public getConfig(): PerformanceConfig {
    return { ...this.config };
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
   */
  public getStats(): OptimizationStats {
    return { ...this.stats };
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
   */
  public getDetailedStats(): {
    optimization: OptimizationStats;
    culling: any;
    instancing: any;
    resources: any;
    performance: any;
  } {
    return {
      optimization: this.getStats(),
      culling: this.frustumCullingManager.getStats(),
      instancing: this.instancedRenderingManager.getStats(),
      resources: this.resourceManager.getStats(),
      performance: this.performanceMonitor.getStats()
    };
  }

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–ª–ª–±—ç–∫ –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
   */
  public setOnWarning(callback: (warning: PerformanceWarning) => void): void {
    this.onWarningCallback = callback;
  }

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–ª–ª–±—ç–∫ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
   */
  public setOnStatsUpdate(callback: (stats: OptimizationStats) => void): void {
    this.onStatsUpdateCallback = callback;
  }

  /**
   * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
   */
  public forceUpdate(): void {
    console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π...');
    
    if (this.config.enableFrustumCulling) {
      this.frustumCullingManager.forceUpdateAll();
    }
    
    if (this.config.enableResourceOptimization) {
      this.resourceManager.optimizeResources();
    }
    
    console.log('‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –æ—Ç—á–µ—Ç –æ–± –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
   */
  public generateReport(): string {
    const detailedStats = this.getDetailedStats();
    
    return `
=== –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –æ—Ç—á–µ—Ç –æ–± –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ ===

–û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:
- –í—Å–µ–≥–æ –æ–±—ä–µ–∫—Ç–æ–≤: ${detailedStats.optimization.totalObjects}
- –ò–Ω—Å—Ç–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤: ${detailedStats.optimization.instancedObjects}
- –û—Ç—Å–µ—á–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤: ${detailedStats.optimization.culledObjects}
- –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤: ${detailedStats.optimization.reusedResources}
- –¢–µ–∫—É—â–∏–π FPS: ${detailedStats.optimization.currentFps}
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${detailedStats.optimization.memoryUsage}MB
- –°–æ–∫—Ä–∞—â–µ–Ω–æ draw calls: ${detailedStats.optimization.drawCallsReduced}

–≠–§–§–ï–ö–¢–ò–í–ù–û–°–¢–¨ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò:
- –ò–Ω—Å—Ç–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ: ${detailedStats.optimization.totalObjects > 0 ? Math.round(detailedStats.optimization.instancedObjects / detailedStats.optimization.totalObjects * 100) : 0}%
- –û—Ç—Å–µ—á–µ–Ω–∏–µ: ${detailedStats.culling.cullingEfficiency}%
- –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤: ${detailedStats.optimization.reusedResources > 0 ? Math.round(detailedStats.optimization.reusedResources / (detailedStats.resources.geometries + detailedStats.resources.materials) * 100) : 0}%

–î–ï–¢–ê–õ–¨–ù–´–ï –û–¢–ß–ï–¢–´:

${this.frustumCullingManager.generateReport()}

${this.instancedRenderingManager.generateReport()}

${this.resourceManager.generateReport()}

${this.performanceMonitor.generateReport()}

–ù–ê–°–¢–†–û–ô–ö–ò –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò:
- –ò–Ω—Å—Ç–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥: ${this.config.enableInstancedRendering ? '–≤–∫–ª—é—á–µ–Ω' : '–æ—Ç–∫–ª—é—á–µ–Ω'}
- Frustum culling: ${this.config.enableFrustumCulling ? '–≤–∫–ª—é—á–µ–Ω' : '–æ—Ç–∫–ª—é—á–µ–Ω'}
- –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤: ${this.config.enableResourceOptimization ? '–≤–∫–ª—é—á–µ–Ω–∞' : '–æ—Ç–∫–ª—é—á–µ–Ω–∞'}
- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: ${this.config.enablePerformanceMonitoring ? '–≤–∫–ª—é—á–µ–Ω' : '–æ—Ç–∫–ª—é—á–µ–Ω'}
- –ê–≤—Ç–æ–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: ${this.config.autoOptimization ? '–≤–∫–ª—é—á–µ–Ω–∞' : '–æ—Ç–∫–ª—é—á–µ–Ω–∞'}
- –¶–µ–ª–µ–≤–æ–π FPS: ${this.config.targetFps}

============================================================
    `.trim();
  }

  /**
   * –û—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –≤—Å–µ —Ä–µ—Å—É—Ä—Å—ã
   */
  public dispose(): void {
    console.log('üóëÔ∏è –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ PerformanceOptimizer...');
    
    this.frustumCullingManager.dispose();
    this.instancedRenderingManager.dispose();
    this.resourceManager.dispose();
    this.performanceMonitor.dispose();
    
    this.onWarningCallback = undefined;
    this.onStatsUpdateCallback = undefined;
    
    console.log('‚úÖ –†–µ—Å—É—Ä—Å—ã PerformanceOptimizer –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω—ã');
  }
}